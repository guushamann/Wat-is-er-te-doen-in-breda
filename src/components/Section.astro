---
import { getCollection } from "astro:content";

const allResults = await getCollection("results");
const today = new Date();
today.setHours(0, 0, 0, 0);

const results = allResults
  .filter((result) => {
    const eventDate = new Date(result.data.startDate);
    eventDate.setHours(0, 0, 0, 0);

    // Only include events that start today or in the future
    const isFutureEvent = eventDate >= today;

    // Check if event duration is less than or equal to 12 hours
    const startTime = new Date(result.data.startDate).getTime();
    const endTime = new Date(result.data.endDate).getTime();
    const duration = (endTime - startTime) / (1000 * 60 * 60 * 2); // Convert to hours
    const isShortEvent = duration <= 12;

    return isFutureEvent && isShortEvent;
  })
  .sort((a, b) => {
    return (
      new Date(a.data.startDate).getTime() -
      new Date(b.data.startDate).getTime()
    );
  });

// Group results by date
const groupedResults = results.reduce(
  (groups, result) => {
    const date = new Date(result.data.startDate);
    const dateString = date.toLocaleDateString("nl-NL", {
      weekday: "long",
      day: "2-digit",
      month: "2-digit",
      year: "numeric",
    });

    if (!groups[dateString]) {
      groups[dateString] = [];
    }
    groups[dateString].push(result);
    return groups;
  },
  {} as Record<string, typeof results>
);

console.log(results);
---

<div>
  {
    Object.entries(groupedResults).map(([dateString, dateResults]) => (
      <>
        <h1 class="text-2xl lg:text-3xl font-extrabold font-funnel mt-12 ">
          {dateString}
        </h1>
        {dateResults.map((result) => (
          <a href={result.data.urlToEvent} target="_blank">
            <div class="mt-2 mb-6 ">
              <h3 class="text-xl lg:text-2xl font-funnel underline uppercase">
                {result.data.title}
              </h3>

              <div class="flex flex-row gap-2 justify-between">
                <div class="flex flex-row gap-2 justify-between">
                  <div class="text-lg lg:text-xl font-extrabold font-funnel uppercase">
                    {result.data.name}
                  </div>
                </div>
              </div>
              <div class="lg:text-xl font-funnel">
                {result.data.description}
              </div>
            </div>
          </a>
        ))}
      </>
    ))
  }
</div>
